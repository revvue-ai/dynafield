# Generated by ariadne-codegen
# Source: example

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .fragments import (
    BoolFieldDefinition,
    DateFieldDefinition,
    DateTimeFieldDefinition,
    EmailFieldDefinition,
    EnumFieldDefinition,
    FloatFieldDefinition,
    IntFieldDefinition,
    JsonFieldDefinition,
    ListFieldDefinition,
    ObjectFieldDefinition,
    StrFieldDefinition,
    UuidFieldDefinition,
)


class QueryRecordSchema(BaseModel):
    record_schema: "QueryRecordSchemaRecordSchema" = Field(alias="recordSchema")


class QueryRecordSchemaRecordSchema(BaseModel):
    count: int
    schemas: List["QueryRecordSchemaRecordSchemaSchemas"]


class QueryRecordSchemaRecordSchemaSchemas(BaseModel):
    id: Any
    name: str
    description: Optional[str]
    field_definitions: Optional[
        List[
            Annotated[
                Union[
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsBoolFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsDateFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsDateTimeFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsEmailFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsEnumFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsFloatFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsIntFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsJsonFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsListFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsStrFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsUuidFieldGql",
                    "QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsObjectFieldGql",
                ],
                Field(discriminator="typename__"),
            ]
        ]
    ] = Field(alias="fieldDefinitions")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsBoolFieldGql(BoolFieldDefinition):
    typename__: Literal["BoolFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsDateFieldGql(DateFieldDefinition):
    typename__: Literal["DateFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsDateTimeFieldGql(DateTimeFieldDefinition):
    typename__: Literal["DateTimeFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsEmailFieldGql(EmailFieldDefinition):
    typename__: Literal["EmailFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsEnumFieldGql(EnumFieldDefinition):
    typename__: Literal["EnumFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsFloatFieldGql(FloatFieldDefinition):
    typename__: Literal["FloatFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsIntFieldGql(IntFieldDefinition):
    typename__: Literal["IntFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsJsonFieldGql(JsonFieldDefinition):
    typename__: Literal["JsonFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsListFieldGql(ListFieldDefinition):
    typename__: Literal["ListFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsStrFieldGql(StrFieldDefinition):
    typename__: Literal["StrFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsUuidFieldGql(UuidFieldDefinition):
    typename__: Literal["UuidFieldGql"] = Field(alias="__typename")


class QueryRecordSchemaRecordSchemaSchemasFieldDefinitionsObjectFieldGql(ObjectFieldDefinition):
    typename__: Literal["ObjectFieldGql"] = Field(alias="__typename")


QueryRecordSchema.model_rebuild()
QueryRecordSchemaRecordSchema.model_rebuild()
QueryRecordSchemaRecordSchemaSchemas.model_rebuild()
