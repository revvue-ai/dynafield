# Generated by ariadne-codegen
# Source: example

from typing import Any, Dict

from .async_base_client import AsyncBaseClient
from .record_fields import RecordFields


def gql(q: str) -> str:
    return q


class Client(AsyncBaseClient):
    async def record_fields(self, **kwargs: Any) -> RecordFields:
        query = gql(
            """
            query RecordFields {
              typedFields {
                fields {
                  __typename
                  ...BoolFieldDefinition
                  ...DateFieldDefinition
                  ...DateTimeFieldDefinition
                  ...EmailFieldDefinition
                  ...EnumFieldDefinition
                  ...FloatFieldDefinition
                  ...IntFieldDefinition
                  ...JsonFieldDefinition
                  ...ListFieldDefinition
                  ...StrFieldDefinition
                  ...UuidFieldDefinition
                  ...ObjectFieldDefinition
                }
              }
            }

            fragment BoolFieldDefinition on BoolFieldGql {
              id
              label
              description
              defaultBool
            }

            fragment DateFieldDefinition on DateFieldGql {
              id
              label
              description
              defaultDate
            }

            fragment DateTimeFieldDefinition on DateTimeFieldGql {
              id
              label
              description
              defaultDatetime
            }

            fragment EmailFieldDefinition on EmailFieldGql {
              id
              label
              description
              defaultEmail
            }

            fragment EnumFieldDefinition on EnumFieldGql {
              id
              label
              description
              allowedValues
              defaultStr
            }

            fragment FloatFieldDefinition on FloatFieldGql {
              id
              label
              description
              defaultFloat
              geFloat
              leFloat
            }

            fragment IntFieldDefinition on IntFieldGql {
              id
              label
              description
              defaultInt
              geInt
              leInt
            }

            fragment JsonFieldDefinition on JsonFieldGql {
              id
              label
              description
              defaultDict
            }

            fragment ListFieldDefinition on ListFieldGql {
              id
              label
              description
              defaultList
            }

            fragment ObjectFieldDefinition on ObjectFieldGql {
              id
              label
              description
            }

            fragment StrFieldDefinition on StrFieldGql {
              id
              label
              description
              defaultStr
              minLength
              maxLength
            }

            fragment UuidFieldDefinition on UuidFieldGql {
              id
              label
              description
              defaultUuid
            }
            """
        )
        variables: Dict[str, object] = {}
        response = await self.execute(
            query=query, operation_name="RecordFields", variables=variables, **kwargs
        )
        data = self.get_data(response)
        return RecordFields.model_validate(data)
